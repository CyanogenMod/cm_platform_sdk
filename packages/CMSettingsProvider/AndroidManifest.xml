<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2015 The CyanogenMod Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          package="org.cyanogenmod.cmsettings"
          coreApp="true"
          android:sharedUserId="android.uid.system">
    <!-- It is necessary to be a system app in order to update table versions in SystemProperties for
         CMSettings to know whether or not the client side cache is up to date. It is also necessary
         to run in the system process in order to start the content provider prior to running migration
         for CM settings on user starting -->

    <uses-permission android:name="android.permission.MANAGE_USERS" />

    <application android:icon="@drawable/icon"
                 android:label="@string/app_name"
                 android:process="system"
                 android:killAfterRestore="false"
                 android:allowClearUserData="false"
                 android:enabled="true">

        <provider android:name="CMSettingsProvider"
                  android:authorities="cmsettings"
                  android:multiprocess="false"
                  android:exported="true"
                  android:writePermission="cyanogenmod.permission.WRITE_SETTINGS"
                  android:singleUser="true"
                  android:initOrder="100" />

        <receiver android:name="PreBootReceiver" android:enabled="true">
            <!-- This broadcast is sent after the core system has finished
                 booting, before the home app is launched or BOOT_COMPLETED
                 is sent. -->
            <intent-filter>
                <action android:name="android.intent.action.PRE_BOOT_COMPLETED"/>
            </intent-filter>
        </receiver>

    </application>
</manifest>
